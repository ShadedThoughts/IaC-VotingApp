# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '315b80aa-5189-42f9-9379-79814dc58de5'
  voteImageRepository: 'vote'
  resultImageRepository: 'result'
  workerImageRepository: 'worker'
  seedDataImageRepository: 'seed-data'
  containerRegistry: 'uohdaim.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'uohdaim1347df70-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


# stages:
# - stage: Build
#   displayName: Build stage
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: $(imageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)

#     - upload: manifests
#       artifact: manifests

# - stage: Deploy
#   displayName: Deploy stage
  # dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy to Kubernetes
    pool:
      vmImage: $(vmImageName)
    environment: 'ShadedThoughtsIaCVotingApp.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          # - task: KubernetesManifest@0
          #   displayName: Deploy to Kubernetes cluster
          #   inputs:
          #     action: deploy
          #     manifests: |
          #       $(Pipeline.Workspace)/manifests/deployment.yml
          #       $(Pipeline.Workspace)/manifests/service.yml
          #     imagePullSecrets: |
          #       $(imagePullSecret)
          #     containers: |
          #       $(containerRegistry)/$(imageRepository):$(tag)
          
          - task: KubernetesManifest@1
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'uohdaim-k8scluster'
              namespace: 'default'
              manifests: '$(Build.SourcesDirectory)/k8s-specifications/'
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(voteImageRepository)
                $(containerRegistry)/$(resultImageRepository)
                $(containerRegistry)/$(workerImageRepository)
                $(containerRegistry)/$(seedDataImageRepository)

