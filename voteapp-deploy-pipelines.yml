# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '315b80aa-5189-42f9-9379-79814dc58de5'
  voteImageRepository: 'vote'
  resultImageRepository: 'result'
  workerImageRepository: 'worker'
  seedDataImageRepository: 'seed-data'
  containerRegistry: 'uohdaim.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'uohdaim1347df70-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Deploy
  displayName: Deploy to Kubernetes
  jobs:
  - job: Deploy
    displayName: Deployment
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: KubernetesManifest@0
      displayName: Create imagePullSecret
      inputs:
        action: createSecret
        secretName: $(imagePullSecret)
        kubernetesServiceConnection: 'uohdaim-k8scluster'
        dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          
    - task: KubernetesManifest@1
      displayName: Deploy to Kubernetes cluster
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'uohdaim-k8scluster'
        namespace: 'default'
        manifests: '$(Build.SourcesDirectory)/k8s-specifications/*.yaml'
        imagePullSecrets: |
          $(imagePullSecret)
        containers: |
          $(containerRegistry)/$(voteImageRepository)
          $(containerRegistry)/$(resultImageRepository)
          $(containerRegistry)/$(workerImageRepository)
          $(containerRegistry)/$(seedDataImageRepository)

